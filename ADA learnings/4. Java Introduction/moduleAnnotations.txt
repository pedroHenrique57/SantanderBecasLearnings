    Java Variables

String - stores text, such as "Hello". String values are surrounded by double quotes
int - stores integers (whole numbers), without decimals, such as 123 or -123
float - stores floating point numbers, with decimals, such as 19.99 or -19.99
char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes
boolean - stores values with two states: true or false

    Declaring Variables

type variableName = value;

    Arrays

String[] cars = {"Volvo", "BMW", "Ford", "Mazda"};

    Data types

    Data types are divided into two groups:

Primitive data types - includes byte, short, int, long, float, double, boolean and char
Non-primitive data types - such as String, Arrays and Classes

    Primitive Data Types
A primitive data type specifies the size and type of variable values, and it has no additional methods.

    There are eight primitive data types in Java:

Data Type	Size	Description
byte	1 byte	Stores whole numbers from -128 to 127
short	2 bytes	Stores whole numbers from -32,768 to 32,767
int	4 bytes	Stores whole numbers from -2,147,483,648 to 2,147,483,647
long	8 bytes	Stores whole numbers from -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
float	4 bytes	Stores fractional numbers. Sufficient for storing 6 to 7 decimal digits
double	8 bytes	Stores fractional numbers. Sufficient for storing 15 decimal digits
boolean	1 bit	Stores true or false values
char	2 bytes	Stores a single character/letter or ASCII values

    Java Operators
Java divides the operators into the following groups:

    Arithmetic operators
Operator Name	                Description	                    Example	
+	     Addition	     Adds together two values	             x + y	
-	     Subtraction	 Subtracts one value from another	     x - y	
*	     Multiplication	 Multiplies two values	                 x * y	
/	     Division	     Divides one value by another	         x / y	
%	     Modulus	     Returns the division remainder	         x % y	
++	     Increment	     Increases the value of a variable by 1	 ++x	
--	     Decrement	     Decreases the value of a variable by 1	 --x

    Assignment operators

Assignment operators are used to assign values to variables.

In the example below, we use the assignment operator (=) to assign the value 10 to a variable called x

Operator	Example	   Same As
=	        x = 5	   x = 5	
+=	        x += 3	   x = x + 3	
-=	        x -= 3	   x = x - 3	
*=	        x *= 3	   x = x * 3	
/=	        x /= 3	   x = x / 3	
%=	        x %= 3	   x = x % 3	
&=	        x &= 3	   x = x & 3	
|=	        x |= 3	   x = x | 3	
^=	        x ^= 3	   x = x ^ 3	
>>=	        x >>= 3	   x = x >> 3	
<<=	        x <<= 3	   x = x << 3


Comparison operators

Operator	        Name	            Example
==	       Equal to	                    x == y	
!=	       Not equal	                x != y	
>	       Greater than	                x > y	
<	       Less than	                x < y	
>=	       Greater than or equal to	    x >= y	
<=	       Less than or equal to	    x <= y


Logical operators

Operator	Name	                     Description	                            Example	
&& 	        Logical and	  Returns true if both statements are true	                x < 5 &&  x < 10	
|| 	        Logical or	  Returns true if one of the statements is true	            x < 5 || x < 4	
!	        Logical not	  Reverse the result, returns false if the result is true	!(x < 5 && x < 10)

    Bitwise Operators
Bitwise operators are used to performing the manipulation of individual bits of a number. They can be used with any integral type (char, short, int, etc.). 
They are used when performing update and query operations of the Binary indexed trees. 
Read about it: https://www.geeksforgeeks.org/bitwise-operators-in-java/
